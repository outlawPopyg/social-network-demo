{"version":3,"sources":["state/dialog-reducer.js","components/inputs/textarea.js","components/sidebar/sidebar.js","api/api.js","state/users-reducer.js","images/user.png","components/loader/loader.js","hoc/withLoader.js","components/paginator/paginator.js","components/users-page/users-page.js","selectors/selectors.js","components/users-page/users-page-container.js","state/auth-reducer.js","components/header/header.js","components/header/headerContainer.js","components/login/login.js","state/app-reducer.js","state/content-reducer.js","state/redux-store.js","components/content/proifle-info/profileStatus.js","components/content/proifle-info/profileInfo.js","components/content/myPosts/post/post.js","components/content/myPosts/myPosts.js","components/content/myPosts/myPostsContainer.js","components/content/content.js","components/content/contentContainer.js","app.js","index.js","validators/validator.js","hoc/withRedirect.js"],"names":["SEND_MESSAGE","sendMessageActionCreator","value","type","initialState","messagesData","id","uuid","message","dialogsData","name","dialogReducer","state","action","withInputComponent","Wrapper","input","meta","props","error","touched","hasError","className","withTextArea","withInput","Sidebar","to","instance","axios","create","withCredentials","baseURL","headers","savePhoto","file","formData","FormData","append","put","then","response","data","TOGGLE_FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","SET_FETCHING","FOLLOWING_IN_PROGRESS","GET_STATUS","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followingId","status","fake","onToggleFollow","userId","setFetching","setFollowing","setProfileStatus","usersReducer","element","find","el","slice","findIndex","followed","filter","Loader","withLoader","Paginator","React","memo","setCurrentPage","portionSize","useState","portionNumber","setPortionNumber","pagesCount","Math","ceil","leftBorder","rightBorder","pages","i","push","onClick","map","p","toggleFollow","small","photos","src","userImage","alt","disabled","some","uId","url","config","getUsersReselect","createSelector","usersPage","u","getPageSize","getTotalUsersCount","getCurrentPage","getFollowingInProgress","getIsFetching","UserPageContainer","this","getUsers","prevProps","prevState","snapshot","Component","mapDispatchToProps","dispatch","get","items","round","totalCount","finally","method","follow","resultCode","connect","SET_USER_DATA","SET_CAPTCHA_URL","email","login","isAuth","captchaUrl","setUserData","payload","getCaptcha","res","authMeThunk","console","log","authReducer","logout","delete","HeaderContainer","auth","maxLength30","maxLengthCreator","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","placeholder","component","validate","requiredField","password","rememberMe","captcha","post","apiLogin","stopSubmit","_error","withRedirect","initialized","SET_INITIALIZE","appReducer","ADD_POST","SET_USERS_PROFILE","DELETE_POST","SET_PHOTOS_SUCCESS","userInfo","postsData","likesCount","setUserProfile","getUserProfileThunk","getProfile","contentReducer","reducers","combineReducers","dialogsPage","contentPage","app","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ProfileStatusWithHooks","setUserStatusThunk","editMode","setEditMode","stateStatus","setStateStatus","useEffect","onDoubleClick","autoFocus","onBlur","event","onChange","target","Contact","title","ProfileInfo","setUserPhotoThunk","owner","contacts","fullName","large","aboutMe","lookingForAJob","lookingForAJobDescription","files","length","Object","entries","key","Post","maxLength10","MyPosts","onButtonClick","MyPostsFormRedux","postText","addPostActionCreator","ProfileFormEditRedux","keys","Content","initialValues","updateProfileInfo","catch","e","ContentContainer","match","params","getUserStatusThunk","JSON","stringify","getStatus","setStatus","a","getState","profile","messages","Error","composedComponent","withRouter","DialogsContainer","lazy","App","initializeApp","path","exact","render","fallback","UsersPageContainer","AppContainer","Promise","all","MainApp","ReactDOM","document","getElementById","maxLength","mapStateToProps","callback"],"mappings":"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","file":"static/js/main.22c39667.chunk.js","sourcesContent":["import {v4 as uuid} from \"uuid\";\r\nconst SEND_MESSAGE = \"SEND-MESSAGE\";\r\n\r\nconst sendMessageActionCreator = (value) => ({ type: \"SEND-MESSAGE\", value });\r\n\r\nconst initialState = {\r\n    messagesData: [\r\n        { id: uuid(), message: \"Hello, how are you?\" },\r\n        { id: uuid(), message: \"Can you help me ? \" },\r\n        { id: uuid(), message: \"Get my dick inside\" }\r\n    ],\r\n    dialogsData: [\r\n        { id: uuid(), name: \"Ivan\" },\r\n        { id: uuid(), name: \"Andrew\" },\r\n        { id: uuid(), name: \"Calvin\" },\r\n        { id: uuid(), name: \"Dutch\" }\r\n    ]\r\n};\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SEND_MESSAGE:\r\n            const message = action.value;\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, { id: uuid(), message }]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dialogReducer;\r\n\r\nexport {\r\n    sendMessageActionCreator\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport './style.css';\r\n\r\nconst withInputComponent = (Wrapper) => {\r\n    return ({ input, meta, ...props}) => {\r\n        const { error, touched } = meta;\r\n\r\n        const hasError = error && touched;\r\n        return (\r\n            <div className={`form-control ${ hasError ? 'error' : ''}`}>\r\n                <Wrapper { ...input} { ...props } />\r\n                { hasError && <span>{ error }</span> }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst withTextArea = withInputComponent((props) => <textarea { ... props } />);\r\nconst withInput = withInputComponent((props) => <input { ... props } />);\r\n\r\nexport { withTextArea, withInput };","import React from 'react';\r\nimport './sidebar.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <nav>\r\n            <div><NavLink to=\"/profile\">Profile</NavLink></div>\r\n            <div><NavLink to=\"/dialogs\">Dialogs</NavLink></div>\r\n            <div><NavLink to=\"/users\">Users</NavLink></div>\r\n            <div><NavLink to=\"/music\">Music</NavLink></div>\r\n            <div><NavLink to=\"/settings\">Settings</NavLink></div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"d7a22d46-2b9f-4ab6-9764-bdb9ae134d6d\"\r\n    }\r\n});\r\n\r\nconst authMe = () => {\r\n    return instance.get(`auth/me`, {\r\n        withCredentials: true\r\n    });\r\n}\r\n\r\nconst getProfile = (id) => {\r\n    return instance.get(`profile/${id}`);\r\n}\r\n\r\nconst getUsers = (currentPage, pageSize) => {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        .then(response => response.data);\r\n}\r\n\r\nconst follow = (id, method) => {\r\n    return instance[method](`/follow/${id}`, {})\r\n        .then(response => response.data);\r\n}\r\n\r\nconst setStatus = (status) => {\r\n    return instance.put(`profile/status`, { status })\r\n        .then(response => response.data);\r\n}\r\n\r\nconst getStatus = (id) => {\r\n    return instance.get(`profile/status/${id}`)\r\n        .then(response => response.data);\r\n}\r\n\r\nconst apiLogin = ({ email, password, rememberMe, captcha }) => {\r\n    return instance.post(`auth/login`, { email, password, rememberMe, captcha })\r\n        .then(response => response.data);\r\n}\r\n\r\nconst apiLogout = () => {\r\n    return instance.delete(`auth/login`)\r\n        .then(response => response.data);\r\n}\r\n\r\nconst savePhoto = (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    return instance.put(\"profile/photo\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" }\r\n    })\r\n        .then(response => response.data);\r\n}\r\n\r\n\r\nexport const saveProfile = (profile) => {\r\n    return instance.put(\"profile\", profile)\r\n        .then(response => response.data);\r\n}\r\n\r\nexport const getCaptchaUrl = () => {\r\n    return instance.get(\"security/get-captcha-url\")\r\n        .then(response => response.data);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport { getUsers, follow, getProfile, authMe, setStatus, getStatus, apiLogin, apiLogout, savePhoto };","import {follow, getStatus, getUsers, setStatus } from \"../api/api\";\r\n\r\nconst TOGGLE_FOLLOW = \"TOGGLE-FOLLOW\";\r\nconst SET_USERS = \"SET-USERS\";\r\nconst SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET-TOTAL-USERS-COUNT\";\r\nconst SET_FETCHING = \"SET-FETCHING\";\r\nconst FOLLOWING_IN_PROGRESS = \"FOLLOWING-IN-PROGRESS\";\r\nconst GET_STATUS = \"GET-STATUS\";\r\n\r\n\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n    followingId: null,\r\n    status: \"\",\r\n    fake: 10\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case TOGGLE_FOLLOW:\r\n            const { users } = state;\r\n            const element = users.find(el => el.id === action.userId);\r\n\r\n            return {\r\n                ...state,\r\n                users: [\r\n                    ...users.slice(0, users.findIndex(el => el.id === action.userId)),\r\n                    { ...element, followed: !element.followed },\r\n                    ...users.slice(users.findIndex(el => el.id === action.userId) + 1)\r\n                ]\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            };\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n\r\n        case SET_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case FOLLOWING_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress ?\r\n                    [...state.followingInProgress, action.followingId] :\r\n                    state.followingInProgress.filter(id => id !== action.followingId)\r\n            }\r\n\r\n        case GET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n\r\n\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const onToggleFollow = (userId) => ({ type: TOGGLE_FOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount });\r\nexport const setFetching = (isFetching) => ({ type: SET_FETCHING, isFetching });\r\nexport const setFollowing = (followingInProgress, followingId) => ({ type: FOLLOWING_IN_PROGRESS, followingInProgress, followingId });\r\nexport const setProfileStatus = (status) => ({ type: GET_STATUS, status });\r\n\r\nexport const getUserStatusThunk = (id) => (dispatch) => {\r\n    getStatus(id)\r\n        .then(response => dispatch(setProfileStatus(response)));\r\n}\r\n\r\nexport const setUserStatusThunk = (status) => (dispatch) => {\r\n    setStatus(status)\r\n        .then(response => dispatch(setProfileStatus(status)));\r\n}\r\n\r\n\r\n\r\nexport const getUsersThunk = (currentPage, pageSize) => (dispatch) => {\r\n    dispatch(setFetching(true));\r\n\r\n    getUsers(currentPage, pageSize)\r\n        .then(data => {\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(Math.round(data.totalCount)));\r\n        })\r\n        .finally(() => dispatch(setFetching(false)));\r\n}\r\n\r\nexport const toggleFollowUserThunk = (id, method) => (dispatch) => {\r\n    dispatch(setFollowing(true, id));\r\n    follow(id, method)\r\n        .then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(onToggleFollow(id));\r\n            }\r\n        }).finally(() => dispatch(setFollowing(false, id)));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default usersReducer;","export default __webpack_public_path__ + \"static/media/user.55758720.png\";","import React from 'react';\r\nimport './loader.css';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n            <div className=\"loader__bar\"></div>\r\n            <div className=\"loader__bar\"></div>\r\n            <div className=\"loader__bar\"></div>\r\n            <div className=\"loader__bar\"></div>\r\n            <div className=\"loader__bar\"></div>\r\n            <div className=\"loader__ball\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","import Loader from \"../components/loader/loader\";\r\n\r\nconst withLoader = (Wrapper) => {\r\n   return (props) => {\r\n       if (props.isFetching) return <Loader />;\r\n       return <Wrapper { ... props } />;\r\n   }\r\n}\r\n\r\nexport default withLoader;","import React, {useState} from \"react\";\r\nimport './paginator.css';\r\n\r\nconst Paginator = React.memo(({ totalUsersCount, pageSize, setCurrentPage, currentPage, portionSize = 10 }) => {\r\n\r\n    const [ portionNumber, setPortionNumber ] = useState(1);\r\n\r\n    const pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n    const leftBorder = (portionNumber - 1) * portionSize + 1;\r\n    const rightBorder = portionNumber * portionSize;\r\n\r\n    const pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) pages.push(i);\r\n    return (\r\n        <>\r\n            { portionNumber > 1 && <button onClick={() => setPortionNumber(portionNumber-1)}>left</button>}\r\n            <div className=\"numbers\">\r\n                { pages\r\n                    .slice(leftBorder-1, rightBorder)\r\n                    .map(p => {\r\n                    return <span\r\n                        onClick={() => setCurrentPage(p) }\r\n                        className={ p === currentPage ? \"selectedPage\" : null }\r\n                        key={p}>\r\n                        {p}\r\n                    </span>\r\n                })}\r\n            </div>\r\n            { pagesCount > portionNumber*10-1 &&\r\n                <button onClick={() => setPortionNumber(portionNumber+1)}>Right</button>}\r\n\r\n        </>\r\n    )\r\n});\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport './user-page.css';\r\nimport userImage from '../../images/user.png';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {follow} from \"../../api/api\";\r\nimport withLoader from '../../hoc/withLoader';\r\nimport Paginator from \"../paginator/paginator\";\r\n\r\nconst UserPage = ({ toggleFollow, followingInProgress, pageSize, totalUsersCount, users, currentPage, setCurrentPage }) => {\r\n    return (\r\n        <>\r\n            <h1>UsersPage</h1>\r\n            <Paginator pageSize={pageSize}\r\n                       totalUsersCount={totalUsersCount}\r\n                       setCurrentPage={setCurrentPage}\r\n                       currentPage={currentPage}\r\n                       portionSize={10}\r\n            />\r\n            <ul className=\"list\">\r\n                {\r\n                    users.map(({ id, name, followed, photos: { small } }) => {\r\n                        return (\r\n                            <li key={id} className=\"user\">\r\n                                <div className=\"image\">\r\n                                    <NavLink to={`profile/${id}`}>\r\n                                        <img src={ small !== null ? small : userImage } alt=\"user\"/>\r\n                                    </NavLink>\r\n                                </div>\r\n                                <div>{ name }</div>\r\n                                <button\r\n                                    disabled={followingInProgress.some(uId => uId === id )}\r\n                                    onClick={(url, config) => {\r\n                                    if (!followed) {\r\n                                        toggleFollow(id, \"post\");\r\n                                    } else {\r\n                                        toggleFollow(id, \"delete\");\r\n                                    }\r\n                                }}>{ followed ? \"Unfollow\" : \"Follow\"}</button>\r\n                            </li>\r\n                        );\r\n                    })\r\n                }\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withLoader(UserPage, 'isFetching');\r\n\r\n","import {createSelector} from \"reselect\";\r\n\r\nconst getUsers = state => state.usersPage.users;\r\n\r\nexport const getUsersReselect = createSelector(getUsers, (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = state => state.usersPage.pageSize;\r\nexport const getTotalUsersCount = state => state.usersPage.totalUsersCount;\r\nexport const getCurrentPage = state => state.usersPage.currentPage;\r\nexport const getFollowingInProgress = state => state.usersPage.followingInProgress;\r\nexport const getIsFetching = state => state.usersPage.isFetching;","import { connect } from \"react-redux\";\r\nimport {\r\n    onToggleFollow, setCurrentPage, setFollowing, getUsersThunk, toggleFollowUserThunk\r\n} from \"../../state/users-reducer\";\r\nimport UsersPage from \"./users-page\";\r\nimport {Component} from \"react\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress, getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers, getUsersReselect\r\n} from \"../../selectors/selectors\";\r\n\r\nclass UserPageContainer extends Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.currentPage !== this.props.currentPage) {\r\n            this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <UsersPage {...this.props} />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersReselect(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        isFetching: getIsFetching(state)\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    onToggleFollow,\r\n    setCurrentPage,\r\n    setFollowing,\r\n    getUsers: getUsersThunk,\r\n    toggleFollow: toggleFollowUserThunk\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPageContainer);","import {authMe, apiLogin, apiLogout, getCaptchaUrl} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"SET-USER-DATA\";\r\nconst SET_CAPTCHA_URL = \"SET-CAPTCHA-URL\";\r\n\r\nconst initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: ''\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n\r\n        case SET_CAPTCHA_URL:\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUserData = (id, email, login, isAuth) => ({ type: SET_USER_DATA,\r\n    payload: { id, email, login, isAuth} });\r\nexport const setCaptchaUrl = (captchaUrl) => ({ type: SET_CAPTCHA_URL, captchaUrl });\r\n\r\n\r\nexport const getCaptcha = () => (dispatch) => {\r\n    return getCaptchaUrl()\r\n        .then( res => dispatch(setCaptchaUrl(res.url)) );\r\n};\r\n\r\nexport const authMeThunk = () => (dispatch) => {\r\n    return authMe()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                const { id, email, login } = response.data.data;\r\n                dispatch(setUserData(id, email, login, true));\r\n            } else {\r\n                console.log(\"You are not authorized\");\r\n            }\r\n        });\r\n}\r\n\r\nexport const login = (formData) => (dispatch) => {\r\n    apiLogin(formData)\r\n        .then(response => {\r\n            if (response.resultCode === 0) {\r\n                dispatch(authMeThunk());\r\n            } else {\r\n                if (response.resultCode === 10) {\r\n                    dispatch(getCaptcha());\r\n                }\r\n                dispatch(stopSubmit(\"login\", {_error: \"Something went wrong\"}));\r\n            }\r\n        })\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    apiLogout()\r\n        .then(response => {\r\n            if (response.resultCode === 0) {\r\n                dispatch(setUserData(null, null, null, false));\r\n            } else {\r\n                console.log(\"Something went wrong\");\r\n            }\r\n        })\r\n}\r\n\r\nexport default authReducer;\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport \"./header.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../state/auth-reducer\";\r\n\r\nconst Header = ({ isAuth, login, logout }) => {\r\n    return (\r\n        <header>\r\n            <div className=\"image\">\r\n                <img\r\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/a/ab/Android_O_Preview_Logo.png\"\r\n                    alt=\"logo\"/>\r\n            </div>\r\n            <div className=\"login\">\r\n                { !isAuth ?\r\n                    <NavLink to=\"/login\">Login</NavLink> :\r\n                    <div>{ login } <button onClick={ logout }>logout</button></div> }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default connect(null, { logout })(Header);","import React, {Component} from 'react';\r\nimport Header from \"./header\";\r\nimport {connect} from \"react-redux\";\r\nimport { setUserData, authMeThunk } from \"../../state/auth-reducer\";\r\n\r\nclass HeaderContainer extends Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.auth.userId,\r\n        email: state.auth.email,\r\n        login: state.auth.login,\r\n        isAuth: state.auth.isAuth\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = { setUserData, authMeThunk };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {withInput} from \"../inputs/textarea\";\r\nimport {maxLengthCreator, requiredField } from \"../../validators/validator\";\r\nimport {login} from \"../../state/auth-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRedirect } from \"../../hoc/withRedirect\";\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <div>\r\n                <div>\r\n                    <Field\r\n                        placeholder={\"Login\"}\r\n                        name={\"email\"}\r\n                        component={ withInput }\r\n                        validate={[ requiredField, maxLength30]}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Field\r\n                        placeholder={\"Password\"}\r\n                        name={\"password\"}\r\n                        component={ withInput }\r\n                        validate={[ requiredField, maxLength30]}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Field\r\n                        component={ withInput }\r\n                        type={\"checkbox\"}\r\n                        name={\"rememberMe\"}\r\n                    /> remember me\r\n                </div>\r\n                { error && <div className={\"form-summary-error\"}>{ error }</div>}\r\n                { captchaUrl && <div>\r\n                    <img src={ captchaUrl } alt=\"captcha\" />\r\n                    <Field name=\"captcha\" component={ withInput } />\r\n                </div> }\r\n                <div>\r\n                    <button>Sign in</button>\r\n                </div>\r\n\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    // unique name for form\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\nconst Login = ({ login, captchaUrl }) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData);\r\n        login(formData);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm captchaUrl={captchaUrl} onSubmit={ onSubmit }/>\r\n        </>\r\n    )\r\n}\r\nconst mapDispatchToProps = { login };\r\nconst mapStateToProps = state => ({\r\n    captchaUrl: state.auth.captchaUrl\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRedirect(\r\n    Login, \"profile\", (props) => props.isAuth));","import { authMeThunk } from \"./auth-reducer\";\r\n\r\n\r\nconst initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst SET_INITIALIZE = \"SET-INITIALIZE\";\r\nexport const setInitialize = () => ({ type: SET_INITIALIZE });\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    Promise.all([dispatch(authMeThunk())])\r\n        .then(() => dispatch(setInitialize()));\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZE:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;","import {v4 as uuid} from \"uuid\";\r\nimport {getProfile, savePhoto, saveProfile} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USERS_PROFILE = \"SET-USER-PROFILE\";\r\nconst DELETE_POST = \"DELETE-POST\";\r\nconst SET_PHOTOS_SUCCESS = \"SET-PHOTOS-SUCCESS\";\r\n\r\nconst initialState = {\r\n    userInfo: '',\r\n    postsData: [\r\n        { id: uuid(), message: \"Hi, how are you?\", likesCount: 12 },\r\n        { id: uuid(), message: \"It's my first post\", likesCount: 9 }\r\n    ]\r\n};\r\n\r\nconst contentReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n\r\n        case DELETE_POST:\r\n            const id = action.id;\r\n            return {\r\n                ...state,\r\n                postsData: [\r\n                    ...state.postsData.slice(0, id),\r\n                    ...state.postsData.slice(id+1)\r\n                ]\r\n            }\r\n\r\n        case ADD_POST:\r\n            const message = action.value;\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, { id: uuid(), message, likesCount: 4 }]\r\n            }\r\n\r\n        case SET_USERS_PROFILE:\r\n            return {\r\n                ...state,\r\n                userInfo: action.userInfo\r\n            }\r\n\r\n        case SET_PHOTOS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                userInfo: { ... state.userInfo, ...action.photos }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (userInfo) => ({ type: SET_USERS_PROFILE, userInfo });\r\nexport const addPostActionCreator = (value) => ( { type: \"ADD-POST\", value });\r\nexport const deletePost = (id) => ({ type: DELETE_POST, id });\r\nexport const setPhotoSuccess = (photos) => ({ type: SET_PHOTOS_SUCCESS, photos });\r\n\r\nexport const setUserPhotoThunk = (file) => async (dispatch) => {\r\n    const res = await savePhoto(file);\r\n    if (res.resultCode === 0) {\r\n        dispatch(setPhotoSuccess(res.data));\r\n    }\r\n}\r\n\r\nexport const getUserProfileThunk = (id) => (dispatch) => {\r\n    getProfile(id)\r\n        .then(res => dispatch(setUserProfile(res.data)));\r\n}\r\n\r\nexport const updateProfileInfo = (formData) => async (dispatch, getState) => {\r\n    const response = await saveProfile(formData);\r\n    const id = getState().auth.id;\r\n    if (response.resultCode === 0) {\r\n        dispatch(getUserProfileThunk(id));\r\n        // dispatch(setUserProfile(formData));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.messages[0] }));\r\n        throw new Error(response.messages[0]);\r\n    }\r\n}\r\n\r\nexport default contentReducer;\r\n","import {applyMiddleware, combineReducers, createStore, compose } from \"redux\";\r\nimport dialogReducer from \"./dialog-reducer\";\r\nimport contentReducer from \"./content-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    dialogsPage: dialogReducer,\r\n    contentPage: contentReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = React.memo(({ status, setUserStatusThunk }) => {\r\n\r\n    const [ editMode, setEditMode ] = useState(false);\r\n    const [ stateStatus, setStateStatus ] = useState(status);\r\n\r\n    useEffect(() => setStateStatus(status), [ status ]);\r\n\r\n    return  (\r\n        <>\r\n            {\r\n                !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={ () => setEditMode(true) }>{status || \"no\"}</span>\r\n                </div>\r\n            }\r\n\r\n            {\r\n                editMode &&\r\n                <div>\r\n                    <input\r\n                        autoFocus\r\n                        onBlur={ (event) => {\r\n                            setEditMode(false);\r\n                            setUserStatusThunk(stateStatus);\r\n                        }}\r\n                        onChange={ (event) => setStateStatus(event.target.value) }\r\n                        value={ stateStatus }\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n});\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Loader from \"../../loader/loader\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport ProfileStatus from \"./profileStatus\";\r\nimport userImage from \"../../../images/user.png\";\r\nimport withLoader from \"../../../hoc/withLoader\";\r\n\r\nconst ProfileInfo = ({ setUserPhotoThunk, userInfo, isAuth, id, status, setUserStatusThunk, owner, ...props }) => {\r\n    if (!isAuth) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n    if (!userInfo) {\r\n        return <Loader />;\r\n    }\r\n\r\n    const onInputChanged = ({ target }) => {\r\n        if (target.files.length) {\r\n            setUserPhotoThunk(target.files[0]);\r\n        }\r\n    }\r\n\r\n    const {\r\n        contacts, fullName, photos: { large }, aboutMe, lookingForAJob,lookingForAJobDescription\r\n    } = userInfo;\r\n    return (\r\n        <>\r\n            <div className=\"main-image\">\r\n                <img src={ large ||  userImage } alt=\"main\" />\r\n                { owner && <input type=\"file\" onChange={ onInputChanged }/> }\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job:</b> { lookingForAJob ? 'yes' : 'no' }\r\n            </div>\r\n            <div>\r\n                <b>About me:</b> { aboutMe ? aboutMe : 'not added'}\r\n            </div>\r\n            <div>\r\n                { lookingForAJob && <b>My professional skills: { lookingForAJobDescription }</b> }\r\n            </div>\r\n            <div>\r\n                {\r\n                    Object.entries(contacts).map(([ key, value ]) => {\r\n                        return <Contact key={ key } title={ key } value={ value } />;\r\n                    })\r\n                }\r\n            </div>\r\n            <h1>{ fullName }</h1>\r\n            <ProfileStatus status={status} id={id} setUserStatusThunk={setUserStatusThunk}/>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nconst Contact = ({ title, value }) => <div>{ title }: { value }</div>;\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\n\r\nconst Post = ({ message }) => {\r\n    return (\r\n        <p>- { message }</p>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from \"./post/post\";\r\nimport './myPosts.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {requiredField, maxLengthCreator} from \"../../../validators/validator\";\r\nimport { withInput } from \"../../inputs/textarea\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo(({ postsData, onButtonClick }) => {\r\n\r\n    console.log(\"render\");\r\n\r\n    const addNewPost = ({ postText }) => onButtonClick(postText);\r\n    return (\r\n        <div>\r\n            <MyPostsFormRedux onSubmit={ addNewPost }/>\r\n            <div>\r\n                {\r\n                    postsData.map( (data) => {\r\n                        return <Post key={data.id} {...data} />\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst MyPostsForm = ({ handleSubmit }) => {\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <h1>My posts</h1>\r\n            <Field name={ \"postText\" }\r\n                   type=\"text\"\r\n                   component={ withInput }\r\n                   validate={ [ requiredField, maxLength10 ] }\r\n            />\r\n            <button className={\"my-posts-button\"} >Add new post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPostsFormRedux = reduxForm({\r\n    form: \"postsForm\"\r\n})(MyPostsForm);\r\n\r\nexport default MyPosts;","import './myPosts.css';\r\nimport { addPostActionCreator } from \"../../../state/content-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport MyPosts from \"./myPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.contentPage.postsData\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onButtonClick: (value) => dispatch(addPostActionCreator(value))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport ProfileInfo from \"./proifle-info/profileInfo\";\r\nimport MyPostsContainer from \"./myPosts/myPostsContainer\";\r\nimport {Field} from \"redux-form\";\r\nimport {withInput, withTextArea} from \"../inputs/textarea\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\nconst Content = (props) => {\r\n\r\n    const onFormSubmit = (formData) => {\r\n        props.updateProfileInfo(formData)\r\n            .then(() => setEditMode(false))\r\n            .catch((e) => {});\r\n    }\r\n\r\n    const [ editMode, setEditMode ] = useState(false);\r\n\r\n    return (\r\n        <div className={\"main-content\"}>\r\n            <button onClick={() => setEditMode(true) }>Edit</button>\r\n            { editMode ?\r\n                <ProfileFormEditRedux\r\n                    userInfo={props.userInfo}\r\n                    initialValues={props.userInfo}\r\n                    onSubmit={ onFormSubmit }\r\n                /> :\r\n                <ProfileInfo { ...props } />\r\n            }\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileFormEdit = ({ handleSubmit, userInfo, error }) => {\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <div>{ error && <div>Something went wrong</div> }</div>\r\n            <button>save</button>\r\n            <div>\r\n                <b>Full name:</b>\r\n                <Field name=\"fullName\" placeholder={\"Full name\"} component={ withInput } />\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job:</b>\r\n                <Field name=\"lookingForAJob\" type=\"checkbox\" component=\"input\"/>\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job description:</b>\r\n                <Field name=\"lookingForAJobDescription\" component={ withTextArea } />\r\n            </div>\r\n            <div>\r\n                <b>My professional skills:</b>\r\n                <Field name=\"skills\" component={ withTextArea } />\r\n            </div>\r\n            <div>\r\n                <b>About me:</b>\r\n                <Field name=\"aboutMe\" component={ withTextArea } />\r\n            </div>\r\n            <div>\r\n                <b>Contacts:</b>\r\n                { Object.keys(userInfo.contacts).map(key => {\r\n                    return <Field component={ withInput } name={\"contacts.\" + key} placeholder={ key } />\r\n                }) }\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst ProfileFormEditRedux = reduxForm(\r\n    { form: \"edit-profile\" }\r\n)(ProfileFormEdit);\r\n\r\nexport default Content;","import React, {Component} from 'react';\r\nimport Content from \"./content\";\r\nimport {connect} from \"react-redux\";\r\nimport {setUserProfile, getUserProfileThunk, setUserPhotoThunk, updateProfileInfo} from \"../../state/content-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {getUserStatusThunk, setUserStatusThunk} from \"../../state/users-reducer\";\r\nimport { withRedirect } from \"../../hoc/withRedirect\";\r\n\r\nclass ContentContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        const { params: { id = this.props.id }} = this.props.match;\r\n        console.log('mount in contentContainer');\r\n        this.props.getUserProfileThunk(id);\r\n        this.props.getUserStatusThunk(id);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log(\"update in contentContainer\");\r\n        const { params: { id = this.props.id }} = this.props.match;\r\n        if (prevProps.match.params.id !== id\r\n            && prevProps.status !== this.props.status &&\r\n            JSON.stringify(prevProps.userInfo) !== JSON.stringify(this.props.userInfo)) {\r\n            this.props.getUserProfileThunk(id);\r\n            this.props.getUserStatusThunk(id);\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return <Content { ...this.props } owner={ !this.props.match.params.id } />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    userInfo: state.contentPage.userInfo,\r\n    id: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n    status: state.usersPage.status\r\n});\r\nconst mapDispatchToProps = {\r\n    setUserProfile, getUserProfileThunk,\r\n    getUserStatusThunk, setUserStatusThunk,\r\n    setUserPhotoThunk, updateProfileInfo\r\n};\r\n\r\nconst composedComponent = compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter\r\n)(withRedirect(ContentContainer, \"login\", (props) => !props.isAuth));\r\n\r\nexport default composedComponent;","import React, { Suspense } from 'react';\r\nimport './app.css';\r\nimport Sidebar from \"./components/sidebar/sidebar\";\r\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\r\nimport UsersPageContainer from \"./components/users-page/users-page-container\";\r\nimport HeaderContainer from \"./components/header/headerContainer\";\r\nimport Login from \"./components/login/login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport Loader from \"./components/loader/loader\";\r\nimport { initializeApp } from \"./state/app-reducer\";\r\nimport store from \"./state/redux-store\";\r\nimport ContentContainer from \"./components/content/contentContainer\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/dialogs/dialogsContainer'));\r\n// const ContentContainer = React.lazy(() => import('./components/content/contentContainer'));\r\n\r\nexport const API_BASE = \"https://social-network.samuraijs.com/api/1.0/users\";\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) return <Loader />;\r\n\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <Sidebar/>\r\n                <div className=\"app-wrapper-content\">\r\n                    <Switch>\r\n\r\n                        <Route path=\"/\" exact component={ ContentContainer } />\r\n\r\n                        <Route path=\"/dialogs\" render={() => {\r\n                            return (\r\n                                <Suspense fallback={<div>Loading...</div>}>\r\n                                    <DialogsContainer />\r\n                                </Suspense>\r\n                            )\r\n                        }}/>\r\n\r\n                        <Route path=\"/profile/:id?\" component={ContentContainer}/>\r\n\r\n                        <Route path=\"/users\" component={UsersPageContainer}/>\r\n\r\n                        <Route path=\"/login\" render={() => <Login/>} />\r\n\r\n                        <Route path=\"*\" render={() => <h1>404 NOT FOUND </h1> } />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nconst AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, { initializeApp })\r\n)(App);\r\n\r\nconst MainApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <AppContainer />\r\n            </HashRouter>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default MainApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport MainApp from \"./app\";\r\n\r\nReactDOM.render(\r\n    <MainApp />,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n","export const requiredField = (value) => {\r\n    if (value) return undefined;\r\n    return \"Required field\";\r\n};\r\n\r\n// validator creator\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length ${maxLength}`;\r\n    return undefined;\r\n};","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n// wrapper - то, что нужно обернуть\r\n// to - url куда редиректнуть\r\n// callback - колбэк дающий понять по какому параметру редиректить\r\n\r\nexport const withRedirect = (Wrapper, to, callback) => {\r\n    function withRedirectComponent(props) {\r\n        const res = callback(props);\r\n        if (res) return <Redirect to={`/${to}`} />;\r\n        return <Wrapper { ...props } />;\r\n    }\r\n\r\n    return connect(mapStateToProps)(withRedirectComponent);\r\n}\r\n\r\n"],"sourceRoot":""}