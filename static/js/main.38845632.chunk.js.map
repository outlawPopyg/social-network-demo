{"version":3,"sources":["state/dialog-reducer.js","components/sidebar/sidebar.js","api/api.js","state/users-reducer.js","images/user.png","components/loader/loader.js","hoc/withLoader.js","components/paginator/paginator.js","components/users-page/users-page.js","selectors/selectors.js","components/users-page/users-page-container.js","state/auth-reducer.js","components/header/header.js","components/header/headerContainer.js","components/login/login.js","state/app-reducer.js","state/content-reducer.js","state/redux-store.js","components/content/proifle-info/profileStatus.js","components/content/proifle-info/profileInfo.js","components/content/myPosts/post/post.js","components/content/myPosts/myPosts.js","components/content/myPosts/myPostsContainer.js","components/content/content.js","components/content/contentContainer.js","app.js","index.js","validators/validator.js","components/inputs/textarea.js","hoc/withRedirect.js"],"names":["SEND_MESSAGE","sendMessageActionCreator","value","type","initialState","messagesData","id","uuid","message","dialogsData","name","dialogReducer","state","action","Sidebar","to","instance","axios","create","withCredentials","baseURL","headers","TOGGLE_FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","SET_FETCHING","FOLLOWING_IN_PROGRESS","GET_STATUS","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followingId","status","fake","onToggleFollow","userId","setFetching","setFollowing","setProfileStatus","usersReducer","element","find","el","slice","findIndex","followed","filter","Loader","className","withLoader","Wrapper","props","Paginator","React","memo","setCurrentPage","portionSize","useState","portionNumber","setPortionNumber","pagesCount","Math","ceil","leftBorder","rightBorder","pages","i","push","onClick","map","p","toggleFollow","small","photos","src","userImage","alt","disabled","some","uId","url","config","getUsersReselect","createSelector","usersPage","u","getPageSize","getTotalUsersCount","getCurrentPage","getFollowingInProgress","getIsFetching","UserPageContainer","this","getUsers","prevProps","prevState","snapshot","Component","mapDispatchToProps","dispatch","get","then","response","data","items","round","totalCount","finally","method","follow","resultCode","connect","SET_USER_DATA","email","login","isAuth","setUserData","payload","authMeThunk","console","log","authReducer","logout","delete","HeaderContainer","auth","maxLength30","maxLengthCreator","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","Field","placeholder","component","withInput","validate","requiredField","formData","password","rememberMe","post","apiLogin","stopSubmit","_error","withRedirect","initialized","SET_INITIALIZE","appReducer","ADD_POST","SET_USERS_PROFILE","DELETE_POST","userInfo","postsData","likesCount","setUserProfile","contentReducer","reducers","combineReducers","dialogsPage","contentPage","app","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ProfileStatusWithHooks","setUserStatusThunk","editMode","setEditMode","stateStatus","setStateStatus","useEffect","onDoubleClick","autoFocus","onBlur","event","onChange","target","ProfileInfo","fullName","large","aboutMe","Post","maxLength10","MyPosts","onButtonClick","MyPostsFormRedux","postText","addPostActionCreator","Content","ContentContainer","match","params","getUserProfileThunk","getUserStatusThunk","getProfile","res","getStatus","put","setStatus","composedComponent","withRouter","DialogsContainer","lazy","App","initializeApp","exact","path","render","fallback","UsersPageContainer","AppContainer","Promise","all","MainApp","basename","process","ReactDOM","document","getElementById","maxLength","length","withInputComponent","input","meta","touched","hasError","withTextArea","mapStateToProps","callback"],"mappings":"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","file":"static/js/main.38845632.chunk.js","sourcesContent":["import {v4 as uuid} from \"uuid\";\r\nconst SEND_MESSAGE = \"SEND-MESSAGE\";\r\n\r\nconst sendMessageActionCreator = (value) => ({ type: \"SEND-MESSAGE\", value });\r\n\r\nconst initialState = {\r\n    messagesData: [\r\n        { id: uuid(), message: \"Hello, how are you?\" },\r\n        { id: uuid(), message: \"Can you help me ? \" },\r\n        { id: uuid(), message: \"Get my dick inside\" }\r\n    ],\r\n    dialogsData: [\r\n        { id: uuid(), name: \"Ivan\" },\r\n        { id: uuid(), name: \"Andrew\" },\r\n        { id: uuid(), name: \"Calvin\" },\r\n        { id: uuid(), name: \"Dutch\" }\r\n    ]\r\n};\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SEND_MESSAGE:\r\n            const message = action.value;\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, { id: uuid(), message }]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dialogReducer;\r\n\r\nexport {\r\n    sendMessageActionCreator\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport './sidebar.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <nav>\r\n            <div><NavLink to=\"/profile\">Profile</NavLink></div>\r\n            <div><NavLink to=\"/dialogs\">Dialogs</NavLink></div>\r\n            <div><NavLink to=\"/users\">Users</NavLink></div>\r\n            <div><NavLink to=\"/music\">Music</NavLink></div>\r\n            <div><NavLink to=\"/settings\">Settings</NavLink></div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"d7a22d46-2b9f-4ab6-9764-bdb9ae134d6d\"\r\n    }\r\n});\r\n\r\nconst authMe = () => {\r\n    return instance.get(`auth/me`, {\r\n        withCredentials: true\r\n    });\r\n}\r\n\r\nconst getProfile = (id) => {\r\n    return instance.get(`profile/${id}`);\r\n}\r\n\r\nconst getUsers = (currentPage, pageSize) => {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        .then(response => response.data);\r\n}\r\n\r\nconst follow = (id, method) => {\r\n    return instance[method](`/follow/${id}`, {})\r\n        .then(response => response.data);\r\n}\r\n\r\nconst setStatus = (status) => {\r\n    return instance.put(`profile/status`, { status })\r\n        .then(response => response.data);\r\n}\r\n\r\nconst getStatus = (id) => {\r\n    return instance.get(`profile/status/${id}`)\r\n        .then(response => response.data);\r\n}\r\n\r\nconst apiLogin = ({ email, password, rememberMe }) => {\r\n    return instance.post(`auth/login`, { email, password, rememberMe })\r\n        .then(response => response.data);\r\n}\r\n\r\nconst apiLogout = () => {\r\n    return instance.delete(`auth/login`)\r\n        .then(response => response.data);\r\n}\r\n\r\nexport { getUsers, follow, getProfile, authMe, setStatus, getStatus, apiLogin, apiLogout };","import {follow, getStatus, getUsers, setStatus } from \"../api/api\";\r\n\r\nconst TOGGLE_FOLLOW = \"TOGGLE-FOLLOW\";\r\nconst SET_USERS = \"SET-USERS\";\r\nconst SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET-TOTAL-USERS-COUNT\";\r\nconst SET_FETCHING = \"SET-FETCHING\";\r\nconst FOLLOWING_IN_PROGRESS = \"FOLLOWING-IN-PROGRESS\";\r\nconst GET_STATUS = \"GET-STATUS\";\r\n\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n    followingId: null,\r\n    status: \"\",\r\n    fake: 10\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case TOGGLE_FOLLOW:\r\n            const { users } = state;\r\n            const element = users.find(el => el.id === action.userId);\r\n\r\n            return {\r\n                ...state,\r\n                users: [\r\n                    ...users.slice(0, users.findIndex(el => el.id === action.userId)),\r\n                    { ...element, followed: !element.followed },\r\n                    ...users.slice(users.findIndex(el => el.id === action.userId) + 1)\r\n                ]\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            };\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n\r\n        case SET_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case FOLLOWING_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress ?\r\n                    [...state.followingInProgress, action.followingId] :\r\n                    state.followingInProgress.filter(id => id !== action.followingId)\r\n            }\r\n\r\n        case GET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n\r\n        case \"FAKE\":\r\n            return {\r\n                ...state,\r\n                fake: state.fake + 1\r\n            }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const onToggleFollow = (userId) => ({ type: TOGGLE_FOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount });\r\nexport const setFetching = (isFetching) => ({ type: SET_FETCHING, isFetching });\r\nexport const setFollowing = (followingInProgress, followingId) => ({ type: FOLLOWING_IN_PROGRESS, followingInProgress, followingId });\r\nexport const setProfileStatus = (status) => ({ type: GET_STATUS, status });\r\n\r\nexport const getUserStatusThunk = (id) => (dispatch) => {\r\n    getStatus(id)\r\n        .then(response => dispatch(setProfileStatus(response)));\r\n}\r\n\r\nexport const setUserStatusThunk = (status) => (dispatch) => {\r\n    setStatus(status)\r\n        .then(response => dispatch(setProfileStatus(status)));\r\n}\r\n\r\nexport const getUsersThunk = (currentPage, pageSize) => (dispatch) => {\r\n    dispatch(setFetching(true));\r\n\r\n    getUsers(currentPage, pageSize)\r\n        .then(data => {\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(Math.round(data.totalCount)));\r\n        })\r\n        .finally(() => dispatch(setFetching(false)));\r\n}\r\n\r\nexport const toggleFollowUserThunk = (id, method) => (dispatch) => {\r\n    dispatch(setFollowing(true, id));\r\n    follow(id, method)\r\n        .then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(onToggleFollow(id));\r\n            }\r\n        }).finally(() => dispatch(setFollowing(false, id)));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default usersReducer;","export default __webpack_public_path__ + \"static/media/user.55758720.png\";","import React from 'react';\r\nimport './loader.css';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n            <div className=\"loader__bar\"></div>\r\n            <div className=\"loader__bar\"></div>\r\n            <div className=\"loader__bar\"></div>\r\n            <div className=\"loader__bar\"></div>\r\n            <div className=\"loader__bar\"></div>\r\n            <div className=\"loader__ball\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","import Loader from \"../components/loader/loader\";\r\n\r\nconst withLoader = (Wrapper) => {\r\n   return (props) => {\r\n       if (props.isFetching) return <Loader />;\r\n       return <Wrapper { ... props } />;\r\n   }\r\n}\r\n\r\nexport default withLoader;","import React, {useState} from \"react\";\r\nimport './paginator.css';\r\n\r\nconst Paginator = React.memo(({ totalUsersCount, pageSize, setCurrentPage, currentPage, portionSize = 10 }) => {\r\n\r\n    const [ portionNumber, setPortionNumber ] = useState(1);\r\n\r\n    const pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n    const leftBorder = (portionNumber - 1) * portionSize + 1;\r\n    const rightBorder = portionNumber * portionSize;\r\n\r\n    const pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) pages.push(i);\r\n    return (\r\n        <>\r\n            { portionNumber > 1 && <button onClick={() => setPortionNumber(portionNumber-1)}>left</button>}\r\n            <div className=\"numbers\">\r\n                { pages\r\n                    .slice(leftBorder-1, rightBorder)\r\n                    .map(p => {\r\n                    return <span\r\n                        onClick={() => setCurrentPage(p) }\r\n                        className={ p === currentPage ? \"selectedPage\" : null }\r\n                        key={p}>\r\n                        {p}\r\n                    </span>\r\n                })}\r\n            </div>\r\n            { pagesCount > portionNumber*10-1 &&\r\n                <button onClick={() => setPortionNumber(portionNumber+1)}>Right</button>}\r\n\r\n        </>\r\n    )\r\n});\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport './user-page.css';\r\nimport userImage from '../../images/user.png';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {follow} from \"../../api/api\";\r\nimport withLoader from '../../hoc/withLoader';\r\nimport Paginator from \"../paginator/paginator\";\r\n\r\nconst UserPage = ({ toggleFollow, followingInProgress, pageSize, totalUsersCount, users, currentPage, setCurrentPage }) => {\r\n    return (\r\n        <>\r\n            <h1>UsersPage</h1>\r\n            <Paginator pageSize={pageSize}\r\n                       totalUsersCount={totalUsersCount}\r\n                       setCurrentPage={setCurrentPage}\r\n                       currentPage={currentPage}\r\n                       portionSize={10}\r\n            />\r\n            <ul className=\"list\">\r\n                {\r\n                    users.map(({ id, name, followed, photos: { small } }) => {\r\n                        return (\r\n                            <li key={id} className=\"user\">\r\n                                <div className=\"image\">\r\n                                    <NavLink to={`profile/${id}`}>\r\n                                        <img src={ small !== null ? small : userImage } alt=\"user\"/>\r\n                                    </NavLink>\r\n                                </div>\r\n                                <div>{ name }</div>\r\n                                <button\r\n                                    disabled={followingInProgress.some(uId => uId === id )}\r\n                                    onClick={(url, config) => {\r\n                                    if (!followed) {\r\n                                        toggleFollow(id, \"post\");\r\n                                    } else {\r\n                                        toggleFollow(id, \"delete\");\r\n                                    }\r\n                                }}>{ followed ? \"Unfollow\" : \"Follow\"}</button>\r\n                            </li>\r\n                        );\r\n                    })\r\n                }\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withLoader(UserPage, 'isFetching');\r\n\r\n","import {createSelector} from \"reselect\";\r\n\r\nconst getUsers = state => state.usersPage.users;\r\n\r\nexport const getUsersReselect = createSelector(getUsers, (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = state => state.usersPage.pageSize;\r\nexport const getTotalUsersCount = state => state.usersPage.totalUsersCount;\r\nexport const getCurrentPage = state => state.usersPage.currentPage;\r\nexport const getFollowingInProgress = state => state.usersPage.followingInProgress;\r\nexport const getIsFetching = state => state.usersPage.isFetching;","import { connect } from \"react-redux\";\r\nimport {\r\n    onToggleFollow, setCurrentPage, setFollowing, getUsersThunk, toggleFollowUserThunk\r\n} from \"../../state/users-reducer\";\r\nimport UsersPage from \"./users-page\";\r\nimport {Component} from \"react\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress, getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers, getUsersReselect\r\n} from \"../../selectors/selectors\";\r\n\r\nclass UserPageContainer extends Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.currentPage !== this.props.currentPage) {\r\n            this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <UsersPage {...this.props} />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersReselect(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        isFetching: getIsFetching(state)\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    onToggleFollow,\r\n    setCurrentPage,\r\n    setFollowing,\r\n    getUsers: getUsersThunk,\r\n    toggleFollow: toggleFollowUserThunk\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPageContainer);","import {authMe, apiLogin, apiLogout} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"SET-USER-DATA\";\r\n\r\nconst initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUserData = (id, email, login, isAuth) => ({ type: SET_USER_DATA,\r\n    payload: { id, email, login, isAuth} });\r\n\r\nexport const authMeThunk = () => (dispatch) => {\r\n    return authMe()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                const { id, email, login } = response.data.data;\r\n                dispatch(setUserData(id, email, login, true));\r\n            } else {\r\n                console.log(\"You are not authorized\");\r\n            }\r\n        });\r\n}\r\n\r\nexport const login = (formData) => (dispatch) => {\r\n    apiLogin(formData)\r\n        .then(response => {\r\n            if (response.resultCode === 0) {\r\n                dispatch(authMeThunk());\r\n            } else {\r\n                const action = stopSubmit(\"login\", {_error: \"Something went wrong\"});\r\n                dispatch(action);\r\n            }\r\n        })\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    apiLogout()\r\n        .then(response => {\r\n            if (response.resultCode === 0) {\r\n                dispatch(setUserData(null, null, null, false));\r\n            } else {\r\n                console.log(\"Something went wrong\");\r\n            }\r\n        })\r\n}\r\n\r\nexport default authReducer;\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport \"./header.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../state/auth-reducer\";\r\n\r\nconst Header = ({ isAuth, login, logout }) => {\r\n    return (\r\n        <header>\r\n            <div className=\"image\">\r\n                <img\r\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/a/ab/Android_O_Preview_Logo.png\"\r\n                    alt=\"logo\"/>\r\n            </div>\r\n            <div className=\"login\">\r\n                { !isAuth ?\r\n                    <NavLink to=\"/login\">Login</NavLink> :\r\n                    <div>{ login } <button onClick={ logout }>logout</button></div> }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default connect(null, { logout })(Header);","import React, {Component} from 'react';\r\nimport Header from \"./header\";\r\nimport {connect} from \"react-redux\";\r\nimport { setUserData, authMeThunk } from \"../../state/auth-reducer\";\r\n\r\nclass HeaderContainer extends Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.auth.userId,\r\n        email: state.auth.email,\r\n        login: state.auth.login,\r\n        isAuth: state.auth.isAuth\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = { setUserData, authMeThunk };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {withInput} from \"../inputs/textarea\";\r\nimport {maxLengthCreator, requiredField } from \"../../validators/validator\";\r\nimport {login} from \"../../state/auth-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRedirect } from \"../../hoc/withRedirect\";\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <div>\r\n                <div>\r\n                    <Field\r\n                        placeholder={\"Login\"}\r\n                        name={\"email\"}\r\n                        component={ withInput }\r\n                        validate={[ requiredField, maxLength30]}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Field\r\n                        placeholder={\"Password\"}\r\n                        name={\"password\"}\r\n                        component={ withInput }\r\n                        validate={[ requiredField, maxLength30]}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Field\r\n                        component={ withInput }\r\n                        type={\"checkbox\"}\r\n                        name={\"rememberMe\"}\r\n                    /> remember me\r\n                </div>\r\n                { error && <div className={\"form-summary-error\"}>{ error }</div>}\r\n                <div>\r\n                    <button>Sign in</button>\r\n                </div>\r\n\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    // unique name for form\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\nconst Login = ({ login }) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        login(formData);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={ onSubmit }/>\r\n        </>\r\n    )\r\n}\r\nconst mapDispatchToProps = { login };\r\n\r\nexport default connect(null, mapDispatchToProps)(withRedirect(\r\n    Login, \"profile\", (props) => props.isAuth));","import { authMeThunk } from \"./auth-reducer\";\r\n\r\n\r\nconst initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst SET_INITIALIZE = \"SET-INITIALIZE\";\r\nexport const setInitialize = () => ({ type: SET_INITIALIZE });\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    Promise.all([dispatch(authMeThunk())])\r\n        .then(() => dispatch(setInitialize()));\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZE:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;","import {v4 as uuid} from \"uuid\";\r\nimport {getProfile} from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USERS_PROFILE = \"SET-USER-PROFILE\";\r\nconst DELETE_POST = \"DELETE-POST\";\r\n\r\nconst initialState = {\r\n    userInfo: '',\r\n    postsData: [\r\n        { id: uuid(), message: \"Hi, how are you?\", likesCount: 12 },\r\n        { id: uuid(), message: \"It's my first post\", likesCount: 9 }\r\n    ]\r\n};\r\n\r\nconst contentReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n\r\n        case DELETE_POST:\r\n            const id = action.id;\r\n            return {\r\n                ...state,\r\n                postsData: [\r\n                    ...state.postsData.slice(0, id),\r\n                    ...state.postsData.slice(id+1)\r\n                ]\r\n            }\r\n\r\n        case ADD_POST:\r\n            const message = action.value;\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, { id: uuid(), message, likesCount: 4 }]\r\n            }\r\n\r\n        case SET_USERS_PROFILE:\r\n            return {\r\n                ...state,\r\n                userInfo: action.userInfo\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (userInfo) => ({ type: SET_USERS_PROFILE, userInfo });\r\nexport const addPostActionCreator = (value) => ( { type: \"ADD-POST\", value });\r\nexport const deletePost = (id) => ({ type: DELETE_POST, id });\r\n\r\nexport const getUserProfileThunk = (id) => (dispatch) => {\r\n    getProfile(id)\r\n        .then(res => dispatch(setUserProfile(res.data)));\r\n}\r\n\r\nexport default contentReducer;\r\n","import {applyMiddleware, combineReducers, createStore, compose } from \"redux\";\r\nimport dialogReducer from \"./dialog-reducer\";\r\nimport contentReducer from \"./content-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    dialogsPage: dialogReducer,\r\n    contentPage: contentReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = ({ status, setUserStatusThunk }) => {\r\n\r\n    const [ editMode, setEditMode ] = useState(false);\r\n    const [ stateStatus, setStateStatus ] = useState(status);\r\n\r\n    useEffect(() => setStateStatus(status), [ status ]);\r\n\r\n    return  (\r\n        <>\r\n            {\r\n                !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={ () => setEditMode(true) }>{status || \"no\"}</span>\r\n                </div>\r\n            }\r\n\r\n            {\r\n                editMode &&\r\n                <div>\r\n                    <input\r\n                        autoFocus\r\n                        onBlur={ (event) => {\r\n                            setEditMode(false);\r\n                            setUserStatusThunk(stateStatus);\r\n                        }}\r\n                        onChange={ (event) => setStateStatus(event.target.value) }\r\n                        value={ stateStatus }\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Loader from \"../../loader/loader\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport ProfileStatus from \"./profileStatus\";\r\nimport withLoader from \"../../../hoc/withLoader\";\r\n\r\nconst ProfileInfo = ({ userInfo, isAuth, id, status, setUserStatusThunk }) => {\r\n\r\n    if (!isAuth) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n    if (!userInfo) {\r\n        return <Loader />;\r\n    }\r\n\r\n    const { fullName, photos: { large }, aboutMe } = userInfo;\r\n    return (\r\n        <>\r\n            <div className=\"main-image\">\r\n                <img src={ large } alt=\"main\" />\r\n            </div>\r\n            <h1>{ fullName }</h1>\r\n            <div>{ aboutMe }</div>\r\n            <ProfileStatus status={status} id={id} setUserStatusThunk={setUserStatusThunk}/>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\n\r\nconst Post = ({ message }) => {\r\n    return (\r\n        <p>- { message }</p>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from \"./post/post\";\r\nimport './myPosts.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {requiredField, maxLengthCreator} from \"../../../validators/validator\";\r\nimport { withInput } from \"../../inputs/textarea\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo(({ postsData, onButtonClick }) => {\r\n\r\n    console.log(\"render\");\r\n\r\n    const addNewPost = ({ postText }) => onButtonClick(postText);\r\n    return (\r\n        <div>\r\n            <MyPostsFormRedux onSubmit={ addNewPost }/>\r\n            <div>\r\n                {\r\n                    postsData.map( (data) => {\r\n                        return <Post key={data.id} {...data} />\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst MyPostsForm = ({ handleSubmit }) => {\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <h1>My posts</h1>\r\n            <Field name={ \"postText\" }\r\n                   type=\"text\"\r\n                   component={ withInput }\r\n                   validate={ [ requiredField, maxLength10 ] }\r\n            />\r\n            <button className={\"my-posts-button\"} >Add new post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPostsFormRedux = reduxForm({\r\n    form: \"postsForm\"\r\n})(MyPostsForm);\r\n\r\nexport default MyPosts;","import './myPosts.css';\r\nimport { addPostActionCreator } from \"../../../state/content-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport MyPosts from \"./myPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.contentPage.postsData\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onButtonClick: (value) => dispatch(addPostActionCreator(value))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ProfileInfo from \"./proifle-info/profileInfo\";\r\nimport MyPostsContainer from \"./myPosts/myPostsContainer\";\r\n\r\nconst Content = (props) => {\r\n    return (\r\n        <div className={\"main-content\"}>\r\n            <ProfileInfo { ...props } />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content;","import React, {Component} from 'react';\r\nimport Content from \"./content\";\r\nimport {connect} from \"react-redux\";\r\nimport { setUserProfile, getUserProfileThunk } from \"../../state/content-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {getUserStatusThunk, setUserStatusThunk} from \"../../state/users-reducer\";\r\nimport { withRedirect } from \"../../hoc/withRedirect\";\r\n\r\nclass ContentContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        const { params: { id = this.props.id }} = this.props.match;\r\n\r\n        this.props.getUserProfileThunk(id);\r\n        this.props.getUserStatusThunk(id);\r\n    }\r\n\r\n\r\n    render() {\r\n        return <Content { ...this.props } />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    userInfo: state.contentPage.userInfo,\r\n    id: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n    status: state.usersPage.status\r\n});\r\n\r\nconst mapDispatchToProps = { setUserProfile, getUserProfileThunk, getUserStatusThunk, setUserStatusThunk };\r\n\r\nconst composedComponent = compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter\r\n)(withRedirect(ContentContainer, \"login\", (props) => !props.isAuth));\r\n\r\nexport default composedComponent;","import React, { Suspense } from 'react';\r\nimport './app.css';\r\nimport Sidebar from \"./components/sidebar/sidebar\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport UsersPageContainer from \"./components/users-page/users-page-container\";\r\nimport HeaderContainer from \"./components/header/headerContainer\";\r\nimport Login from \"./components/login/login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport Loader from \"./components/loader/loader\";\r\nimport { initializeApp } from \"./state/app-reducer\";\r\nimport store from \"./state/redux-store\";\r\nimport ContentContainer from \"./components/content/contentContainer\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/dialogs/dialogsContainer'));\r\n// const ContentContainer = React.lazy(() => import('./components/content/contentContainer'));\r\n\r\nexport const API_BASE = \"https://social-network.samuraijs.com/api/1.0/users\";\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) return <Loader />;\r\n\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <Sidebar/>\r\n                <div className=\"app-wrapper-content\">\r\n\r\n                    <Route exact path=\"/dialogs\" render={() => {\r\n                        return (\r\n                            <Suspense fallback={<div>Loading...</div>}>\r\n                                <DialogsContainer />\r\n                            </Suspense>\r\n                        )\r\n                    }}/>\r\n\r\n                    <Route path=\"/profile/:id?\" component={ContentContainer}/>\r\n\r\n                    <Route exact path=\"/users\" component={UsersPageContainer}/>\r\n\r\n                    <Route exact path=\"/login\" render={() => <Login/>}/>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nconst AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, { initializeApp })\r\n)(App);\r\n\r\nconst MainApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter basename={ process.env.PUBLIC_URL }>\r\n                <AppContainer />\r\n            </HashRouter>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default MainApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport MainApp from \"./app\";\r\n\r\nReactDOM.render(\r\n    <MainApp />,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n","export const requiredField = (value) => {\r\n    if (value) return undefined;\r\n    return \"Required field\";\r\n};\r\n\r\n// validator creator\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length ${maxLength}`;\r\n    return undefined;\r\n};","import React from \"react\";\r\nimport './style.css';\r\n\r\nconst withInputComponent = (Wrapper) => {\r\n    return ({ input, meta, ...props}) => {\r\n        const { error, touched } = meta;\r\n\r\n        const hasError = error && touched;\r\n        return (\r\n            <div className={`form-control ${ hasError ? 'error' : ''}`}>\r\n                <Wrapper { ...input} { ...props } />\r\n                { hasError && <span>{ error }</span> }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst withTextArea = withInputComponent((props) => <textarea { ... props } />);\r\nconst withInput = withInputComponent((props) => <input { ... props } />);\r\n\r\nexport { withTextArea, withInput };","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n// wrapper - то, что нужно обернуть\r\n// to - url куда редиректнуть\r\n// callback - колбэк дающий понять по какому параметру редиректить\r\n\r\nexport const withRedirect = (Wrapper, to, callback) => {\r\n    function withRedirectComponent(props) {\r\n        const res = callback(props);\r\n        if (res) return <Redirect to={`/${to}`} />;\r\n        return <Wrapper { ...props } />;\r\n    }\r\n\r\n    return connect(mapStateToProps)(withRedirectComponent);\r\n}\r\n\r\n"],"sourceRoot":""}